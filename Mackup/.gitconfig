[user]
    name = Tomas Pereira de Vasconcelos
    email = tomasvasconcelos1@gmail.com
    signingkey = 7A00A0D0C929E374
    useconfigonly = true

[init]
    defaultBranch = main

[core]
    autocrlf = input
    pager = diff-so-fancy | less --tabs=4 -RF
    fsmonitor = true
    untrackedCache = true

[commit]
    gpgsign = true

[gpg]
    program = /opt/homebrew/bin/gpg

[push]
    default = upstream

[pull]
    rebase = true
    twohead = ort

[help]
    autocorrect = 1

[branch]
    autosetuprebase = always

# https://git-scm.com/book/en/v2/Git-Tools-Rerere
[rerere]
    enabled = true

[color]
    ui = auto

[merge]
    conflictstyle = diff3

# https://github.com/dandavison/delta
[delta]
    navigate = true

[interactive]
    diffFilter = diff-so-fancy --patch

[diff]
    colorMoved = default

# ref: https://confusatory.org/post/133141617492/git-diff-for-binary-apple-property-list-files
[diff "plist"]
    textconv = plutil -convert xml1 -o -

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[alias]
    aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'    # list all aliases
    ls = log --pretty='format:%C(auto)%h [%ad] %s' --date=short
    aa = add -A
    cm = commit -s -m
    ca = !git aa && git cm
    scm = "!f() { faketime \"$(date '+%Y-%m-%d') ${2:-18:17:42}\" git cm \"${1}\"; }; f"
    sb = switch --guess
    co = checkout
    st = status
    undo = !git reset HEAD~
    db = branch -D
    dbo = push origin --delete
    nb = "!f() { git sb --create $1 && git sus; }; f"
    pp = !git pull && git push
    mm = "!f() { git pull && git sb ${1:-main} && git pull && git sb - && git merge ${1:-main} --no-edit; }; f"
    ss = !git stash save "$(git rev-parse --abbrev-ref HEAD)/$(git rev-parse --short HEAD)"
    sp = !git stash pop stash@{"$(git rev-parse --abbrev-ref HEAD)/$(git rev-parse --short HEAD)"}
    sus = !"git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)"
    susf = !"git push --set-upstream fork $(git rev-parse --abbrev-ref HEAD)"
    update = "!f() { git sb ${1} && git pull && git mm ${2-main}; }; f"
    obliterate = "!f() { git filter-branch --force --index-filter \"git rm -r --cached \\\"$1\\\" --ignore-unmatch\" --prune-empty --tag-name-filter cat -- --all; }; f"
    hub = !gh repo view --web

[includeIf "gitdir:~/work/"]
    path = ~/work/.gitconfig

[maintenance]
    repo = ~/.dotfiles
    repo = ~/git_tree/personal_projects/ridgeplot


